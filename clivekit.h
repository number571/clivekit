/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package command-line-arguments */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 3 "clivekit.go"

#include <stdlib.h>
#include <string.h>

#define LIVEKIT_DESC_SIZE 16
#define LIVEKIT_BUFF_SIZE 512
#define LIVEKIT_TOPIC_SIZE 64
#define LIVEKIT_IDENT_SIZE 64

#define LIVEKIT_ERRCODE_SUCCESS     0x00
#define LIVEKIT_ERRCODE_CONNECT     0x01
#define LIVEKIT_ERRCODE_CLOSE       0x02
#define LIVEKIT_ERRCODE_GET_ROOM    0x03
#define LIVEKIT_ERRCODE_PUBLISH     0x04
#define LIVEKIT_ERRCODE_CHAN_CLOSED 0x04

typedef struct {
	char *host;
	char *api_key;
	char *api_secret;
	char *room_name;
	char *ident;
} livekit_connect_info;

typedef struct {
	char   topic[LIVEKIT_TOPIC_SIZE];
	char   ident[LIVEKIT_IDENT_SIZE];
	char   payload[LIVEKIT_BUFF_SIZE];
	size_t payload_size;
} livekit_data_packet;


#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
#ifdef _MSC_VER
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern int livekit_connect_to_room(char* room_desc, livekit_connect_info conn_info);
extern int livekit_disconnect_from_room(char* room_desc);
extern int livekit_read_data_from_room(char* room_desc, livekit_data_packet* data_packet);
extern int livekit_write_data_to_room(char* room_desc, char* topic, char* data, int data_size);

#ifdef __cplusplus
}
#endif
