/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package github.com/number571/clivekit */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 3 "clivekit.go"

#include <stdlib.h>
#include <string.h>

#define CLIVEKIT_SIZE_DESC   16
#define CLIVEKIT_SIZE_BUFF   512
#define CLIVEKIT_SIZE_IDENT  32
#define CLIVEKIT_SIZE_ENCKEY 32 // 256-bit key

typedef enum {
	CLIVEKIT_ETYPE_SUCCESS,
	CLIVEKIT_ETYPE_CONNECT,
	CLIVEKIT_ETYPE_CLOSE,
	CLIVEKIT_ETYPE_GET_ROOM,
	CLIVEKIT_ETYPE_PUBLISH,
	CLIVEKIT_ETYPE_RECEIVE,
	CLIVEKIT_ETYPE_CREATE_ROOM
} clivekit_error_type;

typedef enum {
	CLIVEKIT_DTYPE_CUSTOM,
	CLIVEKIT_DTYPE_TEXT,
	CLIVEKIT_DTYPE_AUDIO,
	CLIVEKIT_DTYPE_VIDEO
} clivekit_data_type;

typedef struct {
	char *host;
	char *api_key;
	char *api_secret;
	char *room_name;
	char *ident;
} clivekit_connect_info;

typedef struct {
	clivekit_data_type dtype;
	char              ident[CLIVEKIT_SIZE_IDENT];
	char              payload[CLIVEKIT_SIZE_BUFF];
	size_t            payload_size;
} clivekit_data_packet;


#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
#ifdef _MSC_VER
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern clivekit_error_type clivekit_connect_to_room(char* room_desc, clivekit_connect_info conn_info);
extern clivekit_error_type clivekit_disconnect_from_room(char* room_desc);
extern clivekit_error_type clivekit_add_rx_key_in_room(char* room_desc, char* ident, char* rx_key);
extern clivekit_error_type clivekit_set_tx_key_in_room(char* room_desc, char* tx_key);
extern clivekit_error_type clivekit_read_data_from_room(char* room_desc, clivekit_data_packet* data_packet);
extern clivekit_error_type clivekit_write_data_to_room(char* room_desc, clivekit_data_type data_type, char* data, size_t data_size);

#ifdef __cplusplus
}
#endif
